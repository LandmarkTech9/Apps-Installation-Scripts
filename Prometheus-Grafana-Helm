#Installing Helm 3
==================
#Download the latest helm 3 installation script
# https://helm.sh/docs/intro/install/ 
curl -fsSL -o get_helm.sh 
https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3

#Add execute permissions to the downloaded script & run.
 chmod 700 get_helm.sh
 ./get_helm.sh

#Validate helm installation by executing the helm command.
# vi /etc/sudoers 
helm
Hub.helm.sh

=========================================================
  also install ingress controller run
===============================================================
https://kubernetes.github.io/ingress-nginx/user-guide/monitoring/

helm upgrade --install ingress-nginx ingress-nginx \
  --repo https://kubernetes.github.io/ingress-nginx \
  --namespace ingress-nginx --create-namespace
  
  helm upgrade --install ingress-nginx ingress-nginx \
  --repo https://kubernetes.github.io/ingress-nginx \
  --namespace prometheus
  
#The controller should be configured for exporting metrics. This requires 3 configurations to the controller. These configurations are :

#controller.metrics.enabled=true
#controller.podAnnotations."prometheus.io/scrape"="true"
#controller.podAnnotations."prometheus.io/port"="10254"
run
helm upgrade ingress-nginx ingress-nginx \
--repo https://kubernetes.github.io/ingress-nginx \
--namespace prometheus \
--set controller.metrics.enabled=true \
--set-string controller.podAnnotations."prometheus\.io/scrape"="true" \
--set-string controller.podAnnotations."prometheus\.io/port"="10254"

You can validate that the controller is configured for metrics by looking at the values of the installed release, like this:

helm get values ingress-nginx --namespace prometheus
You should be able to see the values shown below:

..
controller:
  metrics:
    enabled: true
    service:
      annotations:
        prometheus.io/port: "10254"
           prometheus.io/scrape: "true"

=========================================================



==========================================================
#Deploy Prometheus, Exporters, Alert Manager & Grafana
==========================================================
https://docs.aws.amazon.com/eks/latest/userguide/prometheus.html

  
1. #Create a namespace in which will deploy Prometheus & itâ€™s components
kubectl create namespace prometheus

2. Add the prometheus-community chart repository.
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

  install persistent volume
  =============================
3a. install prometheus with 3a only if you already have persistent volume installed if not run 3b commands
  helm upgrade -i prometheus prometheus-community/prometheus \
    --namespace prometheus \
    --set alertmanager.persistentVolume.storageClass="gp2",server.persistentVolume.storageClass="gp2"
3b. 
helm repo ls
helm search repo prometheus
helm search repo apm | grep prometheus

vi into the value files and make changes
 #To make changes 
helm show values prometheus-community/prometheus
#Get prometheus values
helm show values prometheus-community/prometheus >> values.yml
sudo vi values.yml  and edith to
(line 197)
alertmanager
persistentVolume: 
       enable: false

(line 912)
server
persistentVolume: 
       enable: false
       
helm install prometheus prometheus-community/prometheus -n prometheus -f values.yml

4. Verify that all of the pods in the prometheus namespace are in the READY state.
kubectl get pods -n prometheus

5. deploy ingress

apiVersion: extensions/v1beta1  # networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-resource-1
  namespace: prometheus
spec:
  ingressClassName: nginx
  rules:
  - host: alert.ntech.k8.local
    http:
      paths:
      - backend:
          serviceName: prometheus-alertmanager
          servicePort: 80
  - host: prometheus.ntech.k8.local
    http:
      paths: 
      - backend:
          serviceName: prometheus-server
          servicePort: 80


5. se kubectl to port forward the Prometheus console to your local machine.
kubectl --namespace=prometheus port-forward deploy/prometheus-server 9090

6. Point a web browser to localhost:9090 to view the Prometheus console.

7. Choose a metric from the - insert metric at cursor menu, then choose Execute. Choose
   the Graph tab to show the metric over time. The following image shows
   container_memory_usage_bytes over time





2. #Add helm repo which contains Prometheus and Grafana charts
helm repo add prometheus "https://charts.helm.sh/stable"

#use the first chat in the search with name apm/prometheus 
#check the template if you want
helm template apm/prometheus



4. #Update prometheusvalues.yml file to update service types and add alert rules & SMTP details.

5. Deploy using helm with updated values file.
#helm install prometheus apm/prometheus -n apm -f prometheusvalues.yml

6. Get Grafana values file

